ann=T, cex=3)
# plot points as solid circles
plot(rnorm(5,0,1), rnorm(5,0,1), pch=16, axes=F,
ann=F, cex=3)
# plot points as solid circles
plot(rnorm(5,0,1), rnorm(5,0,1), pch=165, axes=F,
ann=F, cex=3)
# plot points as solid circles
plot(rnorm(5,0,1), rnorm(5,0,1), pch=171, axes=F,
ann=F, cex=3)
# plot points as solid circles
plot(rnorm(5,0,1), rnorm(5,0,1), pch=167, axes=F,
ann=F, cex=3)
# plot points as solid circles
plot(rnorm(5,0,1), rnorm(5,0,1), pch=167, axes=F,
ann=F, cex=3, font=5)
# plot points as solid circles
plot(rnorm(5,0,1), rnorm(5,0,1), pch=165, axes=F,
ann=F, cex=3, font=5)
# plot points as solid circles
plot(rnorm(5,0,1), rnorm(5,0,1), pch="B", axes=F,
ann=F, cex=3, font=5)
# plot points as solid circles
plot(rnorm(5,0,1), rnorm(5,0,1), pch="A", axes=F,
ann=F, cex=3, font=5)
# plot points as solid circles
plot(rnorm(5,0,1), rnorm(5,0,1), pch=letter[1:5], axes=F,
ann=F, cex=3, font=5)
# plot points as solid circles
plot(rnorm(5,0,1), rnorm(5,0,1), pch=letters[1:5], axes=F,
ann=F, cex=3, font=5)
# plot points as solid circles
plot(rnorm(5,0,1), rnorm(5,0,1), pch=letters[1:5], axes=F,
ann=F, cex=3)
rep(1:5,5)
m <- matrix(rep(1:5,5),nrow=5,
byrow=F)
m
plot(m, t(m), pch=21,
bg="grey", cex=m,
lwd=t(m), xlim=c(.5,5.5),
ylim=c(.5,5.5), las=1,
xlab="cex", ylab="lwd")
t(m)
m
set.seed(12)
# plot points with a italic serif
# font
plot(rnorm(5,0,1), rnorm(5,0,1),
pch="A", family="serif", font=4,
xlab="Predictor", ylab="Response")
set.seed(12)
plot(rnorm(5,0,1),
rnorm(5,0,1),
xlab="Predictor",
ylab="Response", col=8,
col.lab="grey50",
col.axis="grey90", bty="l")
palette()
colors()
colors.plot()
plot(rnorm(5,0,1),
rnorm(5,0,1),
xlab="Predictor",
ylab="Response", col="wheat3",
col.lab="grey50",
col.axis="grey90", bty="l")
plot(rnorm(5,0,1),
rnorm(5,0,1),
xlab="Predictor",
ylab="Response", col="violetred4",
col.lab="grey50",
col.axis="grey90", bty="l")
set.seed(1)
X<-seq(9,12,l=10)
X
Y1<-(1*X+2)+rnorm(10,3,1)
Y2<-(1.2*X+2)+rnorm(10,3,1)
plot(c(Y1,Y2)~c(X,X),
type="n", axes=T, ann=F,
bty="l", las=1)
points(Y1~X,pch=21, type="b")
points(Y2~X,pch=16, type="b")
plot()
help(plot)
text (x, y = NULL, labels = seq_along(x), adj = NULL,
pos = NULL, offset = 0.5, vfont = NULL, cex = 1, col = NULL,
font = NULL, ...)
points(Y2~X,pch=16, type="b")
text (x, y = NULL, labels = seq_along(x), adj = NULL,
pos = NULL, offset = 0.5, vfont = NULL, cex = 1, col = NULL,
font = NULL, ...)
cc <- c("H","M","L")
cc
paste(cc,1:3, sep=":")
paste(cc, collapse=":")
paste(cc, 1:3,sep="-",collapse=":")
set.seed(10)
X<-rnorm(5,10,1)
Y<-rnorm(5,10,1)
X
x
help(rnorm)
plot(X,Y, type="n",axes=T,
ann=F, bty="l", las=1,
xlim=c(8,11), ylim=c(8,11))
points(X,Y,col="grey", pch=16)
text(X,Y,paste("Site",1:5,
sep="-"), cex=2, pos=4)
help(text)
text(X,Y,paste("Site",1:5,
sep="-"), cex=1, pos=1)
text(X,Y,paste("Site",1:5,
sep="-"), cex=1, pos=2)
text(X,Y,paste("Site",1:5,
sep="-"), cex=1, pos=3)
text(X,Y,paste("Site",1:5,
sep="-"), cex=1, pos=3)
Y<-rnorm(5,10,1)
plot(X,Y, type="n",axes=T,
ann=F, bty="l", las=1,
xlim=c(8,11), ylim=c(8,11))
points(X,Y,col="grey", pch=16)
text(X,Y,paste("Site",1:5,
sep="-"), cex=1, pos=3)
plot(X,Y, type="n",axes=T,
ann=F, bty="l", las=1,
xlim=c(8,11), ylim=c(8,11))
points(X,Y,col="grey", pch=16)
text(X,Y,paste("Site",1:5,
sep="-"), cex=1, pos=3)
set.seed(10)
X<-rnorm(5,10,1)
Y<-rnorm(5,10,1)
plot(X,Y, type="n",axes=T,
ann=F, bty="l", las=1,
xlim=c(8,11), ylim=c(8,11))
points(X,Y,col="grey", pch=16)
text(X,Y,paste("Site",1:5,
sep="-"), cex=1, pos=3)
plot(c(0,1),c(0,1),type="n",
axes=T, ann=F, bty="l", las=1)
text(.5,.75, 5*2+3, cex=2)
text(.5,.5, mean(c(2,3,4,5)),
cex=2)
text(.5,.25, paste("mean=",
mean(c(2,3,4,5))), cex=2)
set.seed(10)
X<-rnorm(5,10,1)
Y<-rnorm(5,10,1)
plot(X,Y, type="p", axes=T,
ann=F, bty="l", las=1)
mtext(expression(Temperature~
(degree*C)), side=1, line=3,
cex=1.5)
mtext(expression(Respiration~
(mL~O[2]~h^-1)), side=2,
line=3.5, cex=1.5)
mtext(expression(Respiration~
(mL~O[2]~h^-1)), side=1,
line=3.5, cex=1.5)
mtext(expression(Respiration~
(mL~O[2]~h^-1)), side=2,
line=3.5, cex=1)
mtext(expression(Respiration~
(mL~O[2]~h^-1)), side=2,
line=3, cex=1)
plot(X,Y, type="p", axes=T,
ann=F, bty="l", las=1)
mtext(expression(Temperature~
(degree*C)), side=1, line=3,
cex=1.5)
mtext(expression(Respiration~
(mL~O[2]~h^-1)), side=2,
line=3, cex=1)
mtext(expression(Respiration~
(mL~O[2]~h^-1)), side=2,
line=3.5, cex=1)
mtext(expression(Respiration~
(mL~O[2]~h^-1)), side=2,
line=3.5, cex=1.5)
mtext(expression(Temperature~
(degree*C)), side=1, line=3,
cex=1.5)
mtext(expression(Respiration~
(mL~O[2]~h^-1)), side=2,
line=3.5, cex=1.5)
plot(X,Y, type="p", axes=T,
ann=F, bty="l", las=1)
mtext(expression(Temperature~
(degree*C)), side=1, line=3,
cex=1.5)
mtext(expression(Respiration~
(mL~O[2]~h^-1)), side=2,
line=3.5, cex=1.5)
plot(X,Y, type="p", axes=T,
ann=F, bty="l", las=1)
mtext(expression(Temperature~
(degree*C)), side=1, line=3,
cex=1.5)
mtext(expression(Respiration~
(mL~O[2]~h^-1)), side=2,
line=2.5 cex=1.5)
mtext(expression(Respiration~
(mL~O[2]~h^-1)), side=2,
line=4 cex=1.5)
mtext(expression(Respiration~
(mL~O[2]~h^-1)), side=2,
line=4, cex=1.5)
mtext(expression(Respiration~
(mL~O[2]~h^-1)), side=2,
line=1, cex=1.5)
mtext(expression(Respiration~
(mL~O[2]~h^-1)), side=2,
line=5, cex=1.5)
mtext(expression(Respiration~
(mL~O[2]~h^-1)), side=2,
line=4, cex=1.5)
plot(X,Y, type="p", axes=T,
ann=F, bty="l", las=1)
mtext(expression(Temperature~
(degree*C)), side=1, line=3,
cex=1.5)
mtext(expression(Respiration~
(mL~O[2]~h^-1)), side=2,
line=4, cex=1.5)
mtext(expression(Respiration~
(mL~O[2]~h^-1)), side=2,
line=5, cex=1.5)
mtext(expression(Respiration~
(mL~O[2]~h^-1)), side=2,
line=2, cex=1.5)
set.seed(10)
X<-rnorm(5,10,1)
Y<-rnorm(5,10,1)
plot(X,Y,type="p",axes=T, ann=F,
bty="l", las=1)
text(9.3,10, expression(f(y) ==
frac(1,sqrt(2*pi*sigma^2))*
e^frac(-(y-mu)^2, 2*sigma^2)),
cex=1.25)
set.seed(3)
X<-rnorm(20,0,1)
Y<-rnorm(20,0,1)
> # calculate correlation
> # between X and Y
cc<-cor(X,Y)
cc
plot(X,Y,type="n",axes=T,
ann=F, bty="l", las=1)
points(X,Y,col="grey", pch=16)
text(0,0,bquote(corr.~coef.==.
(round(cc,2))), cex=4)
text(0,0,names(cc)
text(0,0,names(cc))
plot(X,Y,type="n",axes=T,
ann=F, bty="l", las=1)
points(X,Y,col="grey", pch=16)
text(0,0,bquote(corr.~coef.==.
(round(cc,2))), cex=2)
text(0,0,names(cc))
help(round)
X<-c(2,4,6,10,14,18,24,30,36,42)
Y<-c(5,8,10,11,15,18,16,15,19,16)
n<-nls(Y~SSasymp(X,a,b,c))
help(nls)
n<-nls(Y~SSasymp(X,a,b,c))
plot(Y~X, type='p', ann=F)
lines(1:40, predict(n,
data.frame(X=1:40)))
a<-round(summary(n)$coef[1,1],2)
b<-round(summary(n)$coef[2,1],2)
c<-round(summary(n)$coef[3,1],2)
text(40,8,substitute(y == a
- b*e^c*x,list(y="Nutrient
uptake",a=a,b=b,c=c,x="Time")),
cex=1.25, pos=2)
mtext("Time (min)",1,line=3)
mtext(expression(Nutrient~uptake~(mu~mol~g^-1)),
2, line=3)
#adding axis
set.seed(1)
X<-rnorm(200,10,1)
m<-mean(X)
s<-sd(X)
help(density)
plot(density(X), type="l",
axes=F, ann=F)
axis(1, at=c(0, m, m+s, m-s,
m+2*s, m+2*-s, 100), lab=
expression(NA, mu, 1*sigma,
-1*sigma, 2*sigma, -2*sigma,
NA), pos=0, cex.axis=2)
christ <- read.table("christ.csv", header=T, sep=",")
VAR <- rnorm(100,10,2)
hist(VAR)
#Histogram
set.seed(1)
VAR <- rnorm(100,10,2)
hist(VAR)
VAR <- rnorm(100,10,2)
hist(VAR)
hist(VAR, breaks=18,
probability=T)
hist(VAR)
hist(VAR, breaks=18,
probability=T)
#OR equivalently in this case
hist(VAR, breaks=seq(5.5,15,by=.5), probability=T)
plot(density(VAR))
plot(density(VAR, bw=1))
plot(density(VAR, bw=5))
plot(density(VAR, bw=10))
plot(density(VAR, bw=10000))
plot(density(VAR, bw=1))
VAR1 <- rlnorm(100,2,.5)
hist(VAR1, prob=T)
lines(density(VAR1))
#QQ plots
qqnorm(VAR1)
qqline(VAR1)
VAR2<-rlnorm(15,2,.5)
boxplot(VAR2)
#boxplots
set.seed(6)
VAR2<-rlnorm(15,2,.5)
boxplot(VAR2)
boxplot(VAR2, horizontal = T)
library(FactoMineR)
data(decathlon)
sample(4:49)
sample(4:79,30)
sort(sample(4:79,30))
sort(sample(80:150,30))
str(tle.data)
getwd()
data(InsectSprays)
#Attribuer classe taille
tle.data$size_class<-with(tle.data$TLE, ifelse(TLE<=5,"tips",
ifelse(TLE>5 & TLE <=15,"small",
ifelse(TLE>15 & TLE<=30,"medium",
ifelse(TLE>=30,"large")))))
mydata <- read.table("data.dat")
#Chap 2: Starting out#
data3=scan()
11: 6 9
13:
13:
13:
Read 12 times
data3
#Chap 2: Starting out#
data3=scan()
#Chap 2: Starting out#
data3=scan()
#Chap 2: Starting out#
data3=scan()
data3
#Chap 2: Starting out#
data3=scan()
#Chap 2: Starting out#
data3=scan()
#Chap 2: Starting out#
data3=scan()
data3
buff_tail<-c(10,1,37,5,12)
garden_bee<-c(8,3,19,6,4)
red_tail<-c(18,9,1,2,4)
honeybee<-c(12,13,16,9,10)
carder_bee<-c(8,27,6,32,23)
data<-list(all=T)
data
data<-list(all)
data
data<-list=ls(all=TRUE)
data
data<-ls(pattern="tail|be")
data
getwd()
save(data, file="data")
rm(data)
load("data")
mean(data3)
21+33+44
6579.6-4387.34
2192.26/6579.6
#Quels OTU différents entre DJ et NC ?
install.packages("DESeq2")
#Quels OTU différents entre DJ et NC ?
install.package("DESeq2")
#Quels OTU différents entre DJ et NC ?
install.package("DESeq2")
#Quels OTU différents entre DJ et NC ?
install.packages("DESeq2")
install.packages("popbio")
install.packages("unmarked")
0.5*0.564
library(popbio)
#Survie
sj=0.282
s1=0.564
s2=0.846
#Fecondité
f1=0.5
f2=2
stages <- c("juveniles", "N1", "N2", "N3")
A <- matrix(c(
0, s1*f1, s2*f2, s2*f2,
sj, 	0, 	0, 0,
0, 	s1, 	0, 0,
0, 0, s2, s2
), ncol=4, byrow=TRUE,
dimnames=list(stages,stages)
)
A
lambda(A) #1.35 > 1 pop en croissance
r <- log(1.0.89156) # r=0.30
r <- log(1.089156) # r=0.30
r
elasticity(A)
install.packages("pdftools")
setwd("D:/Work, Courses/EPHE/Stage_Coral reef food web CRIOBE/R")
setwd("D:/Work, Courses/EPHE/Stage_Coral reef food web CRIOBE/R")
dir()
txt<-pdf.txt("herbivores diet GBR.pdf")
txt<-pdf_text("herbivores diet GBR.pdf")
library(pdftools)
library("pdftools")
install.packages("pdftools")
library("pdftools")
txt<-pdf_text("herbivores diet GBR.pdf")
cat(txt[1])
fonts<-pdf_fonts("herbivores diet GBR.pdf")
fonts
cat(txt[2])
txt2 <- strsplit(txt, "\n")
head(txt2[1])
head(txt2[[1]])
#Extract the information
help(grep)
help(strsplit)
#Extract the information
help(grep)
mean(c(2.23, 3.45, 1.87, 2.11, 7.33, 18.34, 19.23))
install.packages("rafalib")
library("rafalib")
install.packages("rafalib","swirl")
install.packages("rafalib", "swirl")
install.packages("swirl")
library("swirl")
ls()
rm(list=ls())
swirl()
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
X[c(3,5,7)]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo", "bar")]
swirl()
TRUE==TRUE
TRUE==FALSE
(FALSE==TRUE) ==FALSE
6==7
6<7
10<=10
5!=7
5!=7
5!==7
info()
nxt()
5=7
5!=7
5!==7
5!=7
5=!7
5=7
info()
skip()
FALSE&FALSE
TRUE&c(TRUE,FALSE,FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE |c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins','twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints>5
which(ints>7)
any(ints>0)
any(ints>=0)
any(ints<0)
all(ints>0)
